@model OnlineApp.Models.Question

@{
    ViewBag.Title = "AddQuestions";
    Layout = "~/Views/Shared/_Layout2.cshtml";
}

<h2>AddQuestions</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    if (TempData["ms"] != null)
    {
        <div class="text-success">@TempData["ms"]</div>
    }

    <div class="form-horizontal">

        <div class="form-group">
            @Html.LabelFor(model => model.q_fk_catid, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("q_fk_catid", ViewBag.list as SelectList, "---Select---", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.q_fk_catid, "", new { @class = "text-danger" })
            </div>
        </div>

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.qu_text, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.qu_text, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.qu_text, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.opA, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.opA, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.opA, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.opB, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.opB, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.opB, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.opC, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.opC, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.opC, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.opD, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.opD, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.opD, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cop, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cop, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cop, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10 mt-2">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>

</div>
